{"version":3,"sources":["components/ContactForm/ContactForm.js","components/ContactsListItem/ContactsListItem.js","components/ContactList/ContactList.js","components/Filter/Filter.js","App.js","index.js"],"names":["ContactForm","state","name","number","handleChange","target","value","setState","handleSubmit","evt","preventDefault","checkSameName","props","onSubmit","checkedName","contactName","forEach","item","alert","this","className","required","type","placeholder","onChange","Component","ContactsListItem","id","onDelete","onClick","ContactList","contactsItem","map","onDeleteContact","Filter","filterValue","e","changeFilter","App","contacts","filter","addContact","contact","uuidv4","prevState","deleteContact","taskId","findContact","toLowerCase","includes","foundContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.42e25c07.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: \"\",\r\n    number: \"\",\r\n  };\r\n\r\n  handleChange = ({ target }) => {\r\n    const { name, value } = target;\r\n    this.setState({ [name]: value });\r\n  };\r\n\r\n  handleSubmit = (evt) => {\r\n    evt.preventDefault();\r\n    this.checkSameName(this.state.name);\r\n    this.props.onSubmit(this.state.name, this.state.number);\r\n    this.setState({ name: \"\", number: \"\" });\r\n  };\r\n\r\n  checkSameName = (checkedName) => {\r\n    const { contactName } = this.props;\r\n    contactName.forEach((item) => {\r\n      if (item.name === checkedName) {\r\n        alert(`${checkedName} is already in contacts.`);\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { name, number } = this.state;\r\n    return (\r\n      <form className=\"contact-form\" onSubmit={this.handleSubmit}>\r\n        <label className=\"contact-label\">\r\n          Name\r\n          <input\r\n            className=\"contact-input\"\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Enter name\"\r\n            name=\"name\"\r\n            value={name}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n\r\n        <label className=\"contact-label\">\r\n          Number\r\n          <input\r\n            className=\"contact-input\"\r\n            required\r\n            type=\"text\"\r\n            placeholder=\"Enter number\"\r\n            name=\"number\"\r\n            value={number}\r\n            onChange={this.handleChange}\r\n          />\r\n        </label>\r\n        <button className=\"submit-Btn\" type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import React, { Component } from \"react\";\r\n\r\nclass ContactsListItem extends Component {\r\n  render() {\r\n    const { id, name, number, onDelete } = this.props;\r\n    return (\r\n      <li className=\"contact-item\" key={id} id={id}>\r\n        {name}: {number} <button className=\"deleteBtn\" onClick={onDelete}>Delete</button>\r\n      </li>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactsListItem;\r\n","import React, { Component } from \"react\";\r\nimport ContactsListItem from \"../ContactsListItem/ContactsListItem\";\r\n\r\nclass ContactList extends Component {\r\n  render() {\r\n    const { contactsItem } = this.props;\r\n    return (\r\n      <ul>\r\n        {contactsItem.map((contactsItem) => {\r\n          return (\r\n            <ContactsListItem\r\n              key={contactsItem.id}\r\n              name={contactsItem.name}\r\n              number={contactsItem.number}\r\n              onDelete={() => this.props.onDeleteContact(contactsItem.id)}\r\n            />\r\n          );\r\n        })}\r\n      </ul>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactList;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Filter extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <label className=\"contact-label\">\r\n          Find contacts by name\r\n          <input\r\n            className=\"contact-input\"\r\n            type=\"text\"\r\n            placeholder=\"Enter name\"\r\n            name=\"filter\"\r\n            value={this.props.filterValue}\r\n            onChange={(e) => this.props.changeFilter(e.target.value)}\r\n          />\r\n        </label>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Filter;\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport ContactForm from \"./components/ContactForm/ContactForm\";\nimport ContactList from \"./components/ContactList/ContactList\";\nimport Filter from \"./components/Filter/Filter\";\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n      { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n      { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n      { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n    ],\n    filter: \"\",\n  };\n\n  addContact = (name, number) => {\n    const contact = {\n      name,\n      number,\n      id: uuidv4(),\n    };\n\n    this.setState((prevState) => {\n      return {\n        contacts: [...prevState.contacts, contact],\n      };\n    });\n  };\n\n  deleteContact = (taskId) => {\n    this.setState((prevState) => {\n      return {\n        contacts: prevState.contacts.filter(({ id }) => id !== taskId),\n      };\n    });\n  };\n\n  changeFilter = (filter) => {\n    this.setState({ filter });\n  };\n\n  findContact = () => {\n    const { filter, contacts } = this.state;\n    return contacts.filter((contact) => contact.name.toLowerCase().includes(filter.toLowerCase()));\n  };\n\n  render() {\n    const { filter, contacts } = this.state;\n    const foundContacts = this.findContact();\n    return (\n      <>\n        <h1>Phonebook</h1>\n        <ContactForm onSubmit={this.addContact} contactName={contacts} />\n\n        <h2>Contacts</h2>\n        <Filter changeFilter={this.changeFilter} filterValue={filter} />\n        <ContactList contactsItem={foundContacts} onDeleteContact={this.deleteContact} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}